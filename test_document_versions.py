#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from django.test import Client
from django.contrib.auth import get_user_model
from django.core.files.uploadedfile import SimpleUploadedFile
from documents.models import Document as DjangoDocument
from documents.services import DocumentParserService, DocumentValidationService
from docx import Document as DocxDocument
from io import BytesIO

User = get_user_model()

def create_test_docx_v1():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ .docx —Ñ–∞–π–ª–∞"""
    doc = DocxDocument()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    doc.add_heading('–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç - –í–µ—Ä—Å–∏—è 1', 0)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    doc.add_paragraph('–≠—Ç–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.')
    doc.add_paragraph('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª
    doc.add_heading('–†–∞–∑–¥–µ–ª 1', level=1)
    doc.add_paragraph('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–¥–µ–ª–∞ 1.')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç—ã
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    
    return buffer.getvalue()

def create_test_docx_v2():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ .docx —Ñ–∞–π–ª–∞"""
    doc = DocxDocument()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    doc.add_heading('–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç - –í–µ—Ä—Å–∏—è 2', 0)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ (–∏–∑–º–µ–Ω–µ–Ω)
    doc.add_paragraph('–≠—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.')
    doc.add_paragraph('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª (–∏–∑–º–µ–Ω–µ–Ω)
    doc.add_heading('–†–∞–∑–¥–µ–ª 1 (–æ–±–Ω–æ–≤–ª–µ–Ω)', level=1)
    doc.add_paragraph('–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–¥–µ–ª–∞ 1.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    doc.add_heading('–†–∞–∑–¥–µ–ª 2 (–Ω–æ–≤—ã–π)', level=1)
    doc.add_paragraph('–ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª –≤–æ –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏.')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç—ã
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    
    return buffer.getvalue()

def create_test_docx_v3():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–π –≤–µ—Ä—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ .docx —Ñ–∞–π–ª–∞"""
    doc = DocxDocument()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    doc.add_heading('–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç - –í–µ—Ä—Å–∏—è 3', 0)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ (–∏–∑–º–µ–Ω–µ–Ω)
    doc.add_paragraph('–≠—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.')
    doc.add_paragraph('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç—Ä–µ—Ç—å–µ–π –≤–µ—Ä—Å–∏–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª (–∏–∑–º–µ–Ω–µ–Ω)
    doc.add_heading('–†–∞–∑–¥–µ–ª 1 (—Ñ–∏–Ω–∞–ª—å–Ω—ã–π)', level=1)
    doc.add_paragraph('–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–¥–µ–ª–∞ 1.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª (–∏–∑–º–µ–Ω–µ–Ω)
    doc.add_heading('–†–∞–∑–¥–µ–ª 2 (–æ–±–Ω–æ–≤–ª–µ–Ω)', level=1)
    doc.add_paragraph('–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–¥–µ–ª–∞ 2.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    doc.add_heading('–†–∞–∑–¥–µ–ª 3 (–Ω–æ–≤—ã–π)', level=1)
    doc.add_paragraph('–ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª –≤ —Ç—Ä–µ—Ç—å–µ–π –≤–µ—Ä—Å–∏–∏.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    doc.add_heading('–¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö', level=2)
    table = doc.add_table(rows=3, cols=2)
    table.cell(0, 0).text = '–ü–æ–ª–µ 1'
    table.cell(0, 1).text = '–ü–æ–ª–µ 2'
    table.cell(1, 0).text = '–ó–Ω–∞—á–µ–Ω–∏–µ 1'
    table.cell(1, 1).text = '–ó–Ω–∞—á–µ–Ω–∏–µ 2'
    table.cell(2, 0).text = '–ó–Ω–∞—á–µ–Ω–∏–µ 3'
    table.cell(2, 1).text = '–ó–Ω–∞—á–µ–Ω–∏–µ 4'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç—ã
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    
    return buffer.getvalue()

def test_document_versions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        username='testuser',
        defaults={
            'email': 'test@example.com',
            'first_name': '–¢–µ—Å—Ç',
            'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'role': 'user'
        }
    )
    if created:
        user.set_password('testpass123')
        user.save()
        print(f"    ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    else:
        print(f"    ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    client = Client()
    client.force_login(user)
    
    # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    print("\nüîç –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    
    docx_v1_content = create_test_docx_v1()
    test_file_v1 = SimpleUploadedFile(
        "test_document_v1.docx",
        docx_v1_content,
        content_type="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    )
    
    response = client.post('/upload/', {
        'title': '–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
        'file': test_file_v1
    })
    
    if response.status_code == 302:
        print("    ‚úÖ –ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        doc_v1 = DjangoDocument.objects.filter(user=user).order_by('-upload_date').first()
        print(f"    üìù –î–æ–∫—É–º–µ–Ω—Ç ID: {doc_v1.id}, –í–µ—Ä—Å–∏—è: {doc_v1.version}")
        print(f"    üìù –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç: {doc_v1.parent_document}")
        print(f"    üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {doc_v1.is_latest_version}")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏: {response.status_code}")
        return
    
    # –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏
    print("\nüîç –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    
    docx_v2_content = create_test_docx_v2()
    test_file_v2 = SimpleUploadedFile(
        "test_document_v2.docx",
        docx_v2_content,
        content_type="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    )
    
    response = client.post(f'/{doc_v1.pk}/version/upload/', {
        'file': test_file_v2,
        'version_notes': '–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ'
    })
    
    if response.status_code == 302:
        print("    ‚úÖ –í—Ç–æ—Ä–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
        doc_v2 = DjangoDocument.objects.filter(user=user).order_by('-upload_date').first()
        print(f"    üìù –î–æ–∫—É–º–µ–Ω—Ç ID: {doc_v2.id}, –í–µ—Ä—Å–∏—è: {doc_v2.version}")
        print(f"    üìù –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç: {doc_v2.parent_document.id if doc_v2.parent_document else 'None'}")
        print(f"    üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {doc_v2.is_latest_version}")
        print(f"    üìù –ó–∞–º–µ—Ç–∫–∏: {doc_v2.version_notes}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ–ª—å—à–µ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è
        doc_v1.refresh_from_db()
        print(f"    üìù –ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ–ø–µ—Ä—å –ø–æ—Å–ª–µ–¥–Ω—è—è: {doc_v1.is_latest_version}")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏: {response.status_code}")
        return
    
    # –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ—Ç—å–µ–π –≤–µ—Ä—Å–∏–∏
    print("\nüîç –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ—Ç—å–µ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    
    docx_v3_content = create_test_docx_v3()
    test_file_v3 = SimpleUploadedFile(
        "test_document_v3.docx",
        docx_v3_content,
        content_type="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    )
    
    response = client.post(f'/{doc_v1.pk}/version/upload/', {
        'file': test_file_v3,
        'version_notes': '–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è'
    })
    
    if response.status_code == 302:
        print("    ‚úÖ –¢—Ä–µ—Ç—å—è –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
        doc_v3 = DjangoDocument.objects.filter(user=user).order_by('-upload_date').first()
        print(f"    üìù –î–æ–∫—É–º–µ–Ω—Ç ID: {doc_v3.id}, –í–µ—Ä—Å–∏—è: {doc_v3.version}")
        print(f"    üìù –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç: {doc_v3.parent_document.id if doc_v3.parent_document else 'None'}")
        print(f"    üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {doc_v3.is_latest_version}")
        print(f"    üìù –ó–∞–º–µ—Ç–∫–∏: {doc_v3.version_notes}")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ—Ç—å–µ–π –≤–µ—Ä—Å–∏–∏: {response.status_code}")
        return
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π
    print("\nüîç –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π")
    
    root_doc = doc_v1.get_root_document()
    versions = root_doc.get_version_history()
    
    print(f"    üìù –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: {root_doc.id}")
    print(f"    üìù –í—Å–µ–≥–æ –≤–µ—Ä—Å–∏–π: {versions.count()}")
    print(f"    üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {root_doc.get_latest_version().id}")
    
    for version in versions:
        print(f"        - –í–µ—Ä—Å–∏—è {version.version} (ID: {version.id}) - {'–¢–µ–∫—É—â–∞—è' if version.is_latest_version else '–°—Ç–∞—Ä–∞—è'}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π
    print("\nüîç –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π")
    
    response = client.get(f'/{root_doc.pk}/versions/')
    if response.status_code == 200:
        print("    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        content = response.content.decode()
        if '–ò—Å—Ç–æ—Ä–∏—è –≤–µ—Ä—Å–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–∞' in content:
            print("    ‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π –Ω–∞–π–¥–µ–Ω")
        if '–í—Å–µ–≥–æ –≤–µ—Ä—Å–∏–π' in content:
            print("    ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–µ—Ä—Å–∏–π –Ω–∞–π–¥–µ–Ω–∞")
        if '–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è' in content:
            print("    ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å—Ç–æ—Ä–∏–∏: {response.status_code}")
    
    # –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å –≤–µ—Ä—Å–∏—è–º–∏
    print("\nüîç –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    
    response = client.get(f'/{doc_v3.pk}/')
    if response.status_code == 200:
        print("    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        content = response.content.decode()
        if '–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è' in content:
            print("    ‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞–π–¥–µ–Ω–∞")
        if '–ò—Å—Ç–æ—Ä–∏—è –≤–µ—Ä—Å–∏–π' in content:
            print("    ‚úÖ –ö–Ω–æ–ø–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π –Ω–∞–π–¥–µ–Ω–∞")
        if '–ü–æ—Å–ª–µ–¥–Ω—è—è' in content:
            print("    ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –≤–µ—Ä—Å–∏–∏ –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {response.status_code}")
    
    # –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –º–æ–¥–µ–ª–∏
    print("\nüîç –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –º–æ–¥–µ–ª–∏")
    
    print(f"    üìù –í–µ—Ä—Å–∏—è {doc_v1.version}:")
    print(f"        - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—Å–∏–π: {doc_v1.get_version_count()}")
    print(f"        - –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: {doc_v1.get_root_document().id}")
    print(f"        - –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {doc_v1.get_latest_version().id}")
    
    print(f"    üìù –í–µ—Ä—Å–∏—è {doc_v2.version}:")
    print(f"        - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—Å–∏–π: {doc_v2.get_version_count()}")
    print(f"        - –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: {doc_v2.get_root_document().id}")
    print(f"        - –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {doc_v2.get_latest_version().id}")
    
    print(f"    üìù –í–µ—Ä—Å–∏—è {doc_v3.version}:")
    print(f"        - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—Å–∏–π: {doc_v3.get_version_count()}")
    print(f"        - –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: {doc_v3.get_root_document().id}")
    print(f"        - –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: {doc_v3.get_latest_version().id}")
    
    # –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ—Ä—Å–∏–π
    print("\nüîç –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ—Ä—Å–∏–π")
    
    processed_versions = DjangoDocument.objects.filter(
        user=user, 
        parent_document=root_doc,
        status='processed'
    ).count()
    
    print(f"    üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π: {processed_versions}")
    
    if processed_versions > 0:
        print("    ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ—Ä—Å–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("    ‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ—Ä—Å–∏–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("=" * 60)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_versions = DjangoDocument.objects.filter(user=user, parent_document=root_doc).count()
    latest_version = root_doc.get_latest_version()
    
    print(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"    üìÑ –í—Å–µ–≥–æ –≤–µ—Ä—Å–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–∞: {total_versions}")
    print(f"    ‚úÖ –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {latest_version.version} (ID: {latest_version.id})")
    print(f"    üìà –í—Å–µ –≤–µ—Ä—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –∏ —Å–≤—è–∑–∞–Ω—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        test_document_versions()
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    success = main()
    sys.exit(0 if success else 1)
