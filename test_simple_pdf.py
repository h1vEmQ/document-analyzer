#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Table, TableStyle, Spacer
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib import colors
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.lib.units import inch
from io import BytesIO

def test_simple_pdf():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º"""
    
    print("üîç –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –±—É—Ñ–µ—Ä –¥–ª—è PDF
    buffer = BytesIO()
    doc = SimpleDocTemplate(buffer, pagesize=A4)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏
    styles = getSampleStyleSheet()
    
    # –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    story = []
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title = Paragraph("–û—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", styles['Title'])
    story.append(title)
    story.append(Spacer(1, 20))
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö
    info_text = """
    <b>–ë–∞–∑–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:</b> –¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç 1<br/>
    <b>–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:</b> –¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç 2<br/>
    <b>–î–∞—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:</b> 04.10.2025 08:17<br/>
    <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> admin
    """
    info = Paragraph(info_text, styles['Normal'])
    story.append(info)
    story.append(Spacer(1, 20))
    
    # –°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    summary_title = Paragraph("–°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π", styles['Heading2'])
    story.append(summary_title)
    story.append(Spacer(1, 10))
    
    # –¢–∞–±–ª–∏—Ü–∞
    table_data = [
        ['–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'],
        ['–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π', '16'],
        ['–î–æ–±–∞–≤–ª–µ–Ω–æ', '0'],
        ['–£–¥–∞–ª–µ–Ω–æ', '10'],
        ['–ò–∑–º–µ–Ω–µ–Ω–æ', '6']
    ]
    
    table = Table(table_data, colWidths=[3*inch, 1.5*inch])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.grey),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, 0), 10),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
        ('BACKGROUND', (0, 1), (-1, -1), colors.beige),
        ('FONTNAME', (0, 1), (-1, -1), 'Helvetica'),
        ('FONTSIZE', (0, 1), (-1, -1), 10),
        ('GRID', (0, 0), (-1, -1), 1, colors.black)
    ]))
    
    story.append(table)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    doc.build(story)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    pdf_data = buffer.getvalue()
    buffer.close()
    
    print(f"‚úÖ PDF —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    print(f"üìè –†–∞–∑–º–µ—Ä: {len(pdf_data)} –±–∞–π—Ç")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    output_path = '/Users/wind/Documents/WARA/test_simple.pdf'
    with open(output_path, 'wb') as f:
        f.write(pdf_data)
    
    print(f"üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    russian_text = '–û—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'
    if russian_text.encode('utf-8') in pdf_data:
        print(f"‚úÖ –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω –≤ PDF!")
    else:
        print(f"‚ùå –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PDF")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    table_text = '–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π'
    if table_text.encode('utf-8') in pdf_data:
        print(f"‚úÖ –¢–∞–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã –≤ PDF!")
    else:
        print(f"‚ùå –¢–∞–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ PDF")

if __name__ == '__main__':
    test_simple_pdf()
