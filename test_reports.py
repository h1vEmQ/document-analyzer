#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from reports.services import PDFReportGeneratorService, EmailReportService, ReportTemplateService
from reports.models import Report, ReportTemplate
from analysis.models import Comparison
from documents.models import Document as DjangoDocument
from users.models import User
from django.utils import timezone
from django.core.files.base import ContentFile

def test_report_generation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤"""
    
    print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ WARA")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User.objects.first()
    if not user:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    completed_comparison = Comparison.objects.filter(
        user=user,
        status='completed'
    ).first()
    
    if not completed_comparison:
        print("‚ùå –ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        print("   –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        return
    
    print(f"üìÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ: {completed_comparison.id}")
    print(f"   –ë–∞–∑–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: {completed_comparison.base_document.title}")
    print(f"   –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: {completed_comparison.compared_document.title}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF –æ—Ç—á–µ—Ç–∞
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –æ—Ç—á–µ—Ç–∞...")
    
    try:
        pdf_service = PDFReportGeneratorService()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
        start_time = timezone.now()
        pdf_data = pdf_service.generate_comparison_report(completed_comparison)
        end_time = timezone.now()
        
        generation_time = (end_time - start_time).total_seconds()
        
        print("‚úÖ PDF –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {generation_time:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"üìè –†–∞–∑–º–µ—Ä PDF: {len(pdf_data)} –±–∞–π—Ç")
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –≤ –ë–î
        report = Report.objects.create(
            user=user,
            comparison=completed_comparison,
            title=f"–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç: {completed_comparison.base_document.title} vs {completed_comparison.compared_document.title}",
            format='pdf',
            file=ContentFile(pdf_data, name=f"test_report_{completed_comparison.id}_{timezone.now().strftime('%Y%m%d_%H%M%S')}.pdf"),
            template_used='default',
            status='ready'
        )
        
        print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ë–î —Å ID: {report.id}")
        print(f"üìÅ –§–∞–π–ª: {report.file.name}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: {str(e)}")
        import traceback
        traceback.print_exc()
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω—ã –æ—Ç—á–µ—Ç–æ–≤
    print(f"\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç—á–µ—Ç–æ–≤...")
    
    try:
        template_service = ReportTemplateService()
        default_template = template_service.get_default_template()
        
        print(f"‚úÖ –®–∞–±–ª–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:")
        print(f"   ‚Ä¢ ID: {default_template.id}")
        print(f"   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {default_template.name}")
        print(f"   ‚Ä¢ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {default_template.is_default}")
        print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {len(default_template.template_content)} —Å–∏–º–≤–æ–ª–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —à–∞–±–ª–æ–Ω–∞–º–∏: {str(e)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É email
    print(f"\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email...")
    
    try:
        email_service = EmailReportService()
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        test_email = "test@example.com"
        result = email_service.send_report_email(report, test_email, "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
        if result['success']:
            print("‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"‚ö†Ô∏è Email –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {result['message']}")
        
        print(f"üìß –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email: {str(e)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç—á–µ—Ç–∞
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—á–µ—Ç–∞:")
    print(f"   ‚Ä¢ ID –æ—Ç—á–µ—Ç–∞: {report.id}")
    print(f"   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {report.title}")
    print(f"   ‚Ä¢ –§–æ—Ä–º–∞—Ç: {report.format}")
    print(f"   ‚Ä¢ –î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {report.generated_date}")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(pdf_data)} –±–∞–π—Ç")
    print(f"   ‚Ä¢ –°–≤—è–∑–∞–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ: {report.comparison.id}")
    
    if report.comparison.changes_summary:
        summary = report.comparison.changes_summary
        print(f"   ‚Ä¢ –°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
        print(f"     - –í—Å–µ–≥–æ: {summary.get('total', 0)}")
        print(f"     - –î–æ–±–∞–≤–ª–µ–Ω–æ: {summary.get('added', 0)}")
        print(f"     - –£–¥–∞–ª–µ–Ω–æ: {summary.get('removed', 0)}")
        print(f"     - –ò–∑–º–µ–Ω–µ–Ω–æ: {summary.get('modified', 0)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è email
    email_notifications = report.email_notifications.all()
    if email_notifications.exists():
        print(f"\nüì¨ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
        for notification in email_notifications:
            status_text = "‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" if notification.status == 'sent' else "‚ùå –ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
            print(f"   ‚Ä¢ {notification.recipient_email}: {status_text}")
            if notification.status == 'failed':
                print(f"     –°—Ç–∞—Ç—É—Å: {notification.status}")
    
    print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìÑ –û—Ç—á–µ—Ç ID: {report.id}")

def test_pdf_content():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞"""
    
    print("\nüîç –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞...")
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
        latest_report = Report.objects.filter(format='pdf').order_by('-generated_date').first()
        
        if not latest_report:
            print("‚ùå PDF –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        print(f"üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç: {latest_report.title}")
        
        # –ß–∏—Ç–∞–µ–º PDF —Ñ–∞–π–ª
        if latest_report.file and os.path.exists(latest_report.file.path):
            with open(latest_report.file.path, 'rb') as f:
                pdf_content = f.read()
                
            print(f"‚úÖ PDF —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
            print(f"üìè –†–∞–∑–º–µ—Ä: {len(pdf_content)} –±–∞–π—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ PDF
            if pdf_content.startswith(b'%PDF'):
                print("‚úÖ –§–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º PDF")
            else:
                print("‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è PDF")
                
        else:
            print("‚ùå PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –¥–∏—Å–∫–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ PDF: {str(e)}")

if __name__ == '__main__':
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_report_generation()
    
    # –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    test_pdf_content()
