#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from reports.models import Report
import re

def verify_pdf_content():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞"""
    
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞")
    print("=" * 50)
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π PDF –æ—Ç—á–µ—Ç
    latest_report = Report.objects.filter(format='pdf').order_by('-generated_date').first()
    
    if not latest_report:
        print("‚ùå PDF –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç: {latest_report.title}")
    print(f"üìÅ –§–∞–π–ª: {latest_report.file.name}")
    
    if latest_report.file and os.path.exists(latest_report.file.path):
        file_size = os.path.getsize(latest_report.file.path)
        print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF
        with open(latest_report.file.path, 'rb') as f:
            content = f.read()
            
        if content.startswith(b'%PDF'):
            print("‚úÖ –§–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º PDF")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ PDF
            russian_words = [
                '–û—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                '–ë–∞–∑–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç',
                '–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º—ã–π –¥–æ–∫—É–º–µ–Ω—Ç', 
                '–î–∞—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è',
                '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                '–°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
                '–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
                '–î–æ–±–∞–≤–ª–µ–Ω–æ',
                '–£–¥–∞–ª–µ–Ω–æ',
                '–ò–∑–º–µ–Ω–µ–Ω–æ',
                '–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞',
                '–î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
                '–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏',
                '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
                '–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è',
                '–°—Ç–∞—Ç—É—Å'
            ]
            
            print(f"\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ PDF:")
            found_words = 0
            for word in russian_words:
                word_bytes = word.encode('utf-8')
                if word_bytes in content:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: '{word}'")
                    found_words += 1
                else:
                    print(f"   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ: '{word}'")
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤: {found_words} –∏–∑ {len(russian_words)}")
            print(f"   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: {(found_words/len(russian_words)*100):.1f}%")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            table_indicators = [
                '–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
                '–î–æ–±–∞–≤–ª–µ–Ω–æ',
                '–£–¥–∞–ª–µ–Ω–æ', 
                '–ò–∑–º–µ–Ω–µ–Ω–æ'
            ]
            
            print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
            table_found = 0
            for indicator in table_indicators:
                indicator_bytes = indicator.encode('utf-8')
                if indicator_bytes in content:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–∞–±–ª–∏—Ü—ã: '{indicator}'")
                    table_found += 1
                else:
                    print(f"   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä: '{indicator}'")
            
            print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü:")
            print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤: {table_found} –∏–∑ {len(table_indicators)}")
            
            # –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if found_words >= len(russian_words) * 0.8 and table_found >= len(table_indicators) * 0.5:
                print(f"\nüéâ –û–¢–õ–ò–ß–ù–û! PDF –æ—Ç—á–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç!")
                print(f"   ‚úÖ –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                print(f"   ‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
                print(f"   ‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å —á–µ—Ä–Ω—ã–º–∏ –∫–≤–∞–¥—Ä–∞—Ç–∞–º–∏ —Ä–µ—à–µ–Ω–∞")
            elif found_words >= len(russian_words) * 0.5:
                print(f"\n‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–û: –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞")
                print(f"   ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏")
            else:
                print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –≤ PDF –Ω–µ –Ω–∞–π–¥–µ–Ω")
                print(f"   ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤")
                
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è PDF")
            
    else:
        print("‚ùå PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –¥–∏—Å–∫–µ")

if __name__ == '__main__':
    verify_pdf_content()
