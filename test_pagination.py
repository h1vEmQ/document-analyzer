#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö —Å–ø–∏—Å–∫–æ–≤
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from documents.models import Document
from analysis.models import Comparison
from reports.models import Report
from settings.models import ApplicationSettings
from django.contrib.auth import get_user_model
from django.test import RequestFactory
from django.contrib.auth.models import AnonymousUser

User = get_user_model()

def test_pagination_settings():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    
    print("üìÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    settings = ApplicationSettings.get_settings()
    print(f"üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {settings.items_per_page}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö
    if 5 <= settings.items_per_page <= 100:
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö (5-100)")
    else:
        print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–æ–≤")
        return False
    
    return True

def test_pagination_views():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è—Ö"""
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è—Ö")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = User.objects.first()
        if not user:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤
    factory = RequestFactory()
    
    # –¢–µ—Å—Ç 1: –î–æ–∫—É–º–µ–Ω—Ç—ã
    print("\nüìÑ –¢–µ—Å—Ç 1: –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    documents_count = Document.objects.filter(user=user).count()
    print(f"   –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {documents_count}")
    
    if documents_count > 0:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        from documents.views import DocumentListView
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
        request = factory.get('/documents/')
        request.user = user
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        view = DocumentListView()
        view.request = request
        
        # –ü–æ–ª—É—á–∞–µ–º queryset
        queryset = view.get_queryset()
        print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ queryset: {queryset.count()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        paginate_by = view.get_paginate_by(queryset)
        print(f"   –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {paginate_by}")
        
        if paginate_by > 0:
            print("‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            print("‚ùå –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑—ã
    print("\nüîç –¢–µ—Å—Ç 2: –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤")
    comparisons_count = Comparison.objects.filter(user=user).count()
    print(f"   –í—Å–µ–≥–æ –∞–Ω–∞–ª–∏–∑–æ–≤: {comparisons_count}")
    
    if comparisons_count > 0:
        from analysis.views import ComparisonListView
        
        request = factory.get('/analysis/')
        request.user = user
        
        view = ComparisonListView()
        view.request = request
        
        queryset = view.get_queryset()
        print(f"   –ê–Ω–∞–ª–∏–∑–æ–≤ –≤ queryset: {queryset.count()}")
        
        paginate_by = view.get_paginate_by(queryset)
        print(f"   –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {paginate_by}")
        
        if paginate_by > 0:
            print("‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            print("‚ùå –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ—Ç –∞–Ω–∞–ª–∏–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –¢–µ—Å—Ç 3: –û—Ç—á–µ—Ç—ã
    print("\nüìä –¢–µ—Å—Ç 3: –ü–∞–≥–∏–Ω–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤")
    reports_count = Report.objects.filter(user=user).count()
    print(f"   –í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤: {reports_count}")
    
    if reports_count > 0:
        from reports.views import ReportListView
        
        request = factory.get('/reports/')
        request.user = user
        
        view = ReportListView()
        view.request = request
        
        queryset = view.get_queryset()
        print(f"   –û—Ç—á–µ—Ç–æ–≤ –≤ queryset: {queryset.count()}")
        
        paginate_by = view.get_paginate_by(queryset)
        print(f"   –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {paginate_by}")
        
        if paginate_by > 0:
            print("‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            print("‚ùå –ü–∞–≥–∏–Ω–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ—Ç –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    return True

def test_pagination_changes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = ApplicationSettings.get_settings()
    original_value = settings.items_per_page
    print(f"üìã –ò—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {original_value}")
    
    # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    test_value = 15
    settings.items_per_page = test_value
    settings.save()
    print(f"üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: {test_value}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    updated_settings = ApplicationSettings.get_settings()
    if updated_settings.items_per_page == test_value:
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
        return False
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    settings.items_per_page = original_value
    settings.save()
    print(f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {original_value}")
    
    return True

def test_pagination_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    print("=" * 50)
    
    from settings.forms import ApplicationSettingsForm
    
    # –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    print("\nüîç –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    valid_values = [5, 10, 25, 50, 100]
    
    for value in valid_values:
        form_data = {'items_per_page': value}
        form = ApplicationSettingsForm(data=form_data)
        
        if form.is_valid():
            print(f"   ‚úÖ –ó–Ω–∞—á–µ–Ω–∏–µ {value} - –≤–∞–ª–∏–¥–Ω–æ")
        else:
            print(f"   ‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ {value} - –Ω–µ–≤–∞–ª–∏–¥–Ω–æ: {form.errors.get('items_per_page')}")
    
    # –¢–µ—Å—Ç 2: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    print("\nüîç –¢–µ—Å—Ç 2: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    invalid_values = [0, 1, 4, 101, 200, -5]
    
    for value in invalid_values:
        form_data = {'items_per_page': value}
        form = ApplicationSettingsForm(data=form_data)
        
        if not form.is_valid():
            print(f"   ‚úÖ –ó–Ω–∞—á–µ–Ω–∏–µ {value} - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: {form.errors.get('items_per_page')}")
        else:
            print(f"   ‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ {value} - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ, –Ω–æ –ø—Ä–∏–Ω—è—Ç–æ")
    
    return True

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    tests_passed = 0
    total_tests = 4
    
    if test_pagination_settings():
        tests_passed += 1
    
    if test_pagination_views():
        tests_passed += 1
    
    if test_pagination_changes():
        tests_passed += 1
    
    if test_pagination_validation():
        tests_passed += 1
    
    print("\n" + "=" * 60)
    print(f"üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {tests_passed}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if tests_passed == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
