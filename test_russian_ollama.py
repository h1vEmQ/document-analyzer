#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ Ollama –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from analysis.ollama_service import OllamaService

def test_russian_responses():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã Ollama –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    
    print("üá∑üá∫ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ Ollama –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    ollama_service = OllamaService(model="llama3")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    if not ollama_service.is_available():
        print("‚ùå Ollama —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Ollama –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:11434")
        return False
    
    print("‚úÖ Ollama —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
    models = ollama_service.get_available_models()
    print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {models}")
    
    if not models:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π")
        return False
    
    # –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    print("\nüîç –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    test_text = "–≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏ –∏ —Ö–æ—Ä–æ—à–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏."
    
    sentiment_result = ollama_service.analyze_document_sentiment(test_text)
    
    if sentiment_result["success"]:
        print("‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {sentiment_result['sentiment_result']}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
        print(f"–û—à–∏–±–∫–∞: {sentiment_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    
    # –¢–µ—Å—Ç 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
    print("\nüîç –¢–µ—Å—Ç 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤")
    test_document = """
    –û—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª.
    
    –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:
    1. –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –Ω–∞ 25%
    2. –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
    3. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ 5 —á–µ–ª–æ–≤–µ–∫
    
    –ü—Ä–æ–±–ª–µ–º—ã:
    1. –ó–∞–¥–µ—Ä–∂–∫–∏ –≤ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö
    2. –ü–æ–≤—ã—à–µ–Ω–∏–µ —Ü–µ–Ω –Ω–∞ —Å—ã—Ä—å–µ
    
    –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–≤–∞—Ä—Ç–∞–ª:
    1. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    2. –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
    """
    
    key_points_result = ollama_service.extract_key_points(test_document)
    
    if key_points_result["success"]:
        print("‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {key_points_result['key_points_result']}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤")
        print(f"–û—à–∏–±–∫–∞: {key_points_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    
    # –¢–µ—Å—Ç 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    print("\nüîç –¢–µ—Å—Ç 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    
    doc1 = "–ü–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –ê. –ë—é–¥–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 100000 —Ä—É–±–ª–µ–π."
    doc2 = "–í—Ç–æ—Ä–æ–π –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –ë. –ë—é–¥–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 150000 —Ä—É–±–ª–µ–π."
    
    comparison_result = ollama_service.compare_documents(
        doc1, doc2, "–ü—Ä–æ–µ–∫—Ç –ê", "–ü—Ä–æ–µ–∫—Ç –ë"
    )
    
    if comparison_result["success"]:
        print("‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {comparison_result['comparison_result']}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        print(f"–û—à–∏–±–∫–∞: {comparison_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    
    return True

if __name__ == "__main__":
    test_russian_responses()
