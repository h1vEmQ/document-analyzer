#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤ –≤ PDF –æ—Ç—á–µ—Ç–µ
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from reports.models import Report

def check_pdf_fonts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —à—Ä–∏—Ñ—Ç—ã –≤ PDF –æ—Ç—á–µ—Ç–µ"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤ –≤ PDF –æ—Ç—á–µ—Ç–µ")
    print("=" * 40)
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π PDF –æ—Ç—á–µ—Ç
    latest_report = Report.objects.filter(format='pdf').order_by('-generated_date').first()
    
    if not latest_report:
        print("‚ùå PDF –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç: {latest_report.title}")
    print(f"üìÅ –§–∞–π–ª: {latest_report.file.name}")
    
    if latest_report.file and os.path.exists(latest_report.file.path):
        file_size = os.path.getsize(latest_report.file.path)
        print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF
        with open(latest_report.file.path, 'rb') as f:
            content = f.read()
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ PDF
        if content.startswith(b'%PDF'):
            print("‚úÖ –§–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º PDF")
            
            # –ò—â–µ–º —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –≤ PDF
            russian_text = '–∞–ê–±–ë–≤–í–≥–ì–¥–î–µ–ï—ë–Å–∂–ñ–∑–ó–∏–ò–π–ô–∫–ö–ª–õ–º–ú–Ω–ù–æ–û–ø–ü—Ä–†—Å–°—Ç–¢—É–£—Ñ–§—Ö–•—Ü–¶—á–ß—à–®—â–©—ä–™—ã–´—å–¨—ç–≠—é–Æ—è–Ø'
            russian_bytes = russian_text.encode('utf-8')
            found_russian = any(char in content for char in russian_bytes)
            
            if found_russian:
                print("‚úÖ –í PDF –Ω–∞–π–¥–µ–Ω—ã —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã")
            else:
                print("‚ùå –í PDF –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à—Ä–∏—Ñ—Ç–∞—Ö
            if b'/Font' in content:
                print("‚úÖ –í PDF –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ä–∏—Ñ—Ç–∞—Ö")
                
                # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è Arial
                if b'Arial' in content:
                    print("‚úÖ –í PDF –Ω–∞–π–¥–µ–Ω —à—Ä–∏—Ñ—Ç Arial")
                else:
                    print("‚ö†Ô∏è –í PDF –Ω–µ –Ω–∞–π–¥–µ–Ω —à—Ä–∏—Ñ—Ç Arial")
                    
                # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è Helvetica
                if b'Helvetica' in content:
                    print("‚úÖ –í PDF –Ω–∞–π–¥–µ–Ω —à—Ä–∏—Ñ—Ç Helvetica")
                else:
                    print("‚ö†Ô∏è –í PDF –Ω–µ –Ω–∞–π–¥–µ–Ω —à—Ä–∏—Ñ—Ç Helvetica")
            else:
                print("‚ùå –í PDF –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ä–∏—Ñ—Ç–∞—Ö")
                
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è PDF")
            
        # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 1000 –±–∞–π—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        print(f"\nüìã –ü–µ—Ä–≤—ã–µ 1000 –±–∞–π—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:")
        print(content[:1000].decode('utf-8', errors='ignore'))
        
    else:
        print("‚ùå PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –¥–∏—Å–∫–µ")

if __name__ == '__main__':
    check_pdf_fonts()
