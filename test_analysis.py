#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from analysis.services import DocumentComparisonService, AnalysisSettingsService
from analysis.models import Comparison
from documents.models import Document as DjangoDocument
from users.models import User
from django.utils import timezone

def test_document_analysis():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π WARA")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User.objects.first()
    if not user:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    processed_docs = DjangoDocument.objects.filter(
        user=user,
        status='processed'
    ).order_by('id')
    
    if len(processed_docs) < 2:
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è!")
        print(f"   –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(processed_docs)}")
        print("   –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 2 –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        return
    
    base_doc = processed_docs[0]
    compared_doc = processed_docs[1]
    
    print(f"üìÑ –ë–∞–∑–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: {base_doc.title}")
    print(f"üìÑ –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: {compared_doc.title}")
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    print("\nüíæ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ –ë–î...")
    
    comparison, created = Comparison.objects.get_or_create(
        user=user,
        base_document=base_doc,
        compared_document=compared_doc,
        defaults={
            'status': 'pending'
        }
    )
    
    if created:
        print(f"‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: {comparison.id}")
    else:
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ ID: {comparison.id}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    
    try:
        comparison_service = DocumentComparisonService()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
        start_time = timezone.now()
        analysis_result = comparison_service.compare_documents(comparison)
        end_time = timezone.now()
        
        processing_time = (end_time - start_time).total_seconds()
        
        print("‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {processing_time:.2f} —Å–µ–∫—É–Ω–¥")
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
        
        summary = analysis_result.get('summary', {})
        print(f"   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ: {summary.get('added', 0)}")
        print(f"   ‚Ä¢ –£–¥–∞–ª–µ–Ω–æ: {summary.get('removed', 0)}")
        print(f"   ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–æ: {summary.get('modified', 0)}")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {summary.get('total', 0)}")
        
        # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print(f"\nüîç –î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
        
        for change_type, changes in analysis_result.items():
            if change_type.endswith('_changes') and isinstance(changes, list):
                if changes:
                    print(f"\nüìã {change_type.replace('_', ' ').title()}:")
                    for i, change in enumerate(changes[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                        print(f"   {i}. {change.get('type', 'unknown')} –≤ {change.get('section', 'unknown')}")
                        print(f"      {change.get('content', '')[:100]}...")
                    
                    if len(changes) > 3:
                        print(f"   ... –∏ –µ—â–µ {len(changes) - 3} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ë–î
        print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –ë–î...")
        comparison_service.save_comparison_results(comparison, analysis_result)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        comparison.refresh_from_db()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: {comparison.status}")
        print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î: {comparison.changes.count()}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if comparison.changes.exists():
            print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
            changes_by_type = comparison.changes.values('change_type').distinct()
            for change_type in changes_by_type:
                count = comparison.changes.filter(change_type=change_type['change_type']).count()
                print(f"   ‚Ä¢ {change_type['change_type']}: {count}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞
        print(f"\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω–∞–ª–∏–∑–∞...")
        settings_service = AnalysisSettingsService()
        user_settings = settings_service.get_user_settings(user)
        
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        print(f"   ‚Ä¢ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {user_settings.sensitivity}")
        print(f"   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {user_settings.include_text_changes}")
        print(f"   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {user_settings.include_table_changes}")
        print(f"   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {user_settings.include_structure_changes}")
        print(f"   ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {user_settings.min_change_length}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}")
        import traceback
        traceback.print_exc()
    
    print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ ID: {comparison.id}")

def create_test_documents():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
    
    from docx import Document
    from django.core.files import File
    import tempfile
    
    user = User.objects.first()
    if not user:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    doc1 = Document()
    doc1.add_heading('–û—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é 1', 0)
    doc1.add_heading('1. –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏', level=1)
    doc1.add_paragraph('–ó–∞–¥–∞—á–∞ 1: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥—É–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞')
    doc1.add_paragraph('–ó–∞–¥–∞—á–∞ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞')
    doc1.add_heading('2. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã', level=1)
    doc1.add_paragraph('–í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤ —Å—Ä–æ–∫')
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –¥–æ–∫—É–º–µ–Ω—Ç (—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏)
    doc2 = Document()
    doc2.add_heading('–û—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é 2', 0)
    doc2.add_heading('1. –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏', level=1)
    doc2.add_paragraph('–ó–∞–¥–∞—á–∞ 1: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥—É–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞')
    doc2.add_paragraph('–ó–∞–¥–∞—á–∞ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞')
    doc2.add_paragraph('–ó–∞–¥–∞—á–∞ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã')  # –î–æ–±–∞–≤–ª–µ–Ω–æ
    doc2.add_heading('2. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã', level=1)
    doc2.add_paragraph('–í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤ —Å—Ä–æ–∫')
    doc2.add_heading('3. –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', level=1)  # –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    doc2.add_paragraph('–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
    with tempfile.NamedTemporaryFile(suffix='.docx', delete=False) as f1:
        doc1.save(f1.name)
        with open(f1.name, 'rb') as file1:
            django_file1 = File(file1, name='test_week1.docx')
            document1 = DjangoDocument(
                title='–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç - –Ω–µ–¥–µ–ª—è 1',
                filename='test_week1.docx',
                file=django_file1,
                file_size=os.path.getsize(f1.name),
                user=user
            )
            document1.save()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç 1: {document1.id}")
    
    with tempfile.NamedTemporaryFile(suffix='.docx', delete=False) as f2:
        doc2.save(f2.name)
        with open(f2.name, 'rb') as file2:
            django_file2 = File(file2, name='test_week2.docx')
            document2 = DjangoDocument(
                title='–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç - –Ω–µ–¥–µ–ª—è 2',
                filename='test_week2.docx',
                file=django_file2,
                file_size=os.path.getsize(f2.name),
                user=user
            )
            document2.save()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç 2: {document2.id}")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–º
    from documents.services import DocumentParserService
    
    parser_service = DocumentParserService()
    
    print("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–æ–º...")
    
    try:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        content_data1 = parser_service.parse_document(document1)
        parser_service.save_parsed_content(document1, content_data1)
        print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç 1 –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
        content_data2 = parser_service.parse_document(document2)
        parser_service.save_parsed_content(document2, content_data2)
        print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç 2 –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {str(e)}")

if __name__ == '__main__':
    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    processed_docs = DjangoDocument.objects.filter(status='processed')
    if len(processed_docs) < 2:
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
        create_test_documents()
        print()
    
    # –ó–∞—Ç–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑
    test_document_analysis()
