#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'wara_project.settings')
django.setup()

from django.test import Client
from django.contrib.auth import get_user_model
from django.core.files.uploadedfile import SimpleUploadedFile
from documents.models import Document as DjangoDocument
from documents.services import DocumentParserService
from docx import Document as DocxDocument
from io import BytesIO

User = get_user_model()

def create_test_docx():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ .docx —Ñ–∞–π–ª–∞"""
    doc = DocxDocument()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    doc.add_heading('–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏', 0)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    doc.add_paragraph('–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª
    doc.add_heading('–†–∞–∑–¥–µ–ª 1: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', level=1)
    doc.add_paragraph('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ —Å –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    doc.add_heading('–¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö', level=2)
    table = doc.add_table(rows=3, cols=3)
    table.style = 'Table Grid'
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    table.cell(0, 0).text = '–ü–∞—Ä–∞–º–µ—Ç—Ä'
    table.cell(0, 1).text = '–ó–Ω–∞—á–µ–Ω–∏–µ'
    table.cell(0, 2).text = '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è'
    
    table.cell(1, 0).text = '–°–∫–æ—Ä–æ—Å—Ç—å'
    table.cell(1, 1).text = '120'
    table.cell(1, 2).text = '–∫–º/—á'
    
    table.cell(2, 0).text = '–í—Ä–µ–º—è'
    table.cell(2, 1).text = '2.5'
    table.cell(2, 2).text = '—á–∞—Å–∞'
    
    # –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–∏–Ω —Ä–∞–∑–¥–µ–ª
    doc.add_heading('–†–∞–∑–¥–µ–ª 2: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', level=1)
    doc.add_paragraph('–í—Ç–æ—Ä–æ–π —Ä–∞–∑–¥–µ–ª —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç—ã
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    
    return buffer.getvalue()

def test_auto_processing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        username='testuser',
        defaults={
            'email': 'test@example.com',
            'first_name': '–¢–µ—Å—Ç',
            'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'role': 'user'
        }
    )
    if created:
        user.set_password('testpass123')
        user.save()
        print(f"    ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    else:
        print(f"    ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π .docx —Ñ–∞–π–ª
    print("\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞...")
    docx_content = create_test_docx()
    test_file = SimpleUploadedFile(
        "test_auto_processing.docx",
        docx_content,
        content_type="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    )
    print(f"    ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file.name} ({len(docx_content)} –±–∞–π—Ç)")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    client = Client()
    client.force_login(user)
    
    # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É
    print("\nüîç –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É")
    response = client.post('/upload/', {
        'title': '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç',
        'file': test_file
    })
    
    if response.status_code == 302:  # –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        print("    ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        latest_doc = DjangoDocument.objects.filter(user=user).order_by('-upload_date').first()
        if latest_doc:
            print(f"    üìù –î–æ–∫—É–º–µ–Ω—Ç ID: {latest_doc.id}")
            print(f"    üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {latest_doc.title}")
            print(f"    üìù –°—Ç–∞—Ç—É—Å: {latest_doc.status}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
            if latest_doc.status == 'processed':
                print("    ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if latest_doc.content_text:
                    print(f"    üìÑ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {len(latest_doc.content_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–¥–µ–ª—ã
                sections_count = latest_doc.get_parsed_sections_count()
                print(f"    üìë –†–∞–∑–¥–µ–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {sections_count}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
                tables_count = latest_doc.get_parsed_tables_count()
                print(f"    üìä –¢–∞–±–ª–∏—Ü –Ω–∞–π–¥–µ–Ω–æ: {tables_count}")
                
                if sections_count > 0 and tables_count > 0:
                    print("    ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                else:
                    print("    ‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ–ø–æ–ª–Ω—ã–µ")
            else:
                print(f"    ‚ùå –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω (—Å—Ç–∞—Ç—É—Å: {latest_doc.status})")
        else:
            print("    ‚ùå –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: —Å—Ç–∞—Ç—É—Å {response.status_code}")
        if hasattr(response, 'content'):
            print(f"    üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞: {response.content.decode()[:200]}...")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞)
    print("\nüîç –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    latest_doc = DjangoDocument.objects.filter(user=user).order_by('-upload_date').first()
    if latest_doc and latest_doc.status != 'processed':
        print(f"    üîß –ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ {latest_doc.id}...")
        
        try:
            parser_service = DocumentParserService()
            parse_result = parser_service.parse_document(latest_doc)
            
            if parse_result and 'sections' in parse_result:
                sections_count = len(parse_result['sections'])
                tables_count = len(parse_result['tables'])
                print("    ‚úÖ –†—É—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
                print(f"    üìë –†–∞–∑–¥–µ–ª–æ–≤: {sections_count}")
                print(f"    üìä –¢–∞–±–ª–∏—Ü: {tables_count}")
            else:
                print("    ‚ùå –û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
        except Exception as e:
            print(f"    ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
    else:
        print("    ‚è≠Ô∏è –†—É—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    print("\nüîç –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    response = client.get('/')
    if response.status_code == 200:
        print("    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        content = response.content.decode()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ
        if '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞' in content:
            print("    ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("    ‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        if 'fas fa-cog' in content:
            print("    ‚úÖ –ö–Ω–æ–ø–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("    ‚ö†Ô∏è –ö–Ω–æ–ø–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status_code}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∫–∏
    print("\nüîç –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∫–∏")
    response = client.get('/upload/')
    if response.status_code == 200:
        print("    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        content = response.content.decode()
        if '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞' in content:
            print("    ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∫–∏")
        else:
            print("    ‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∫–∏")
    else:
        print(f"    ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("=" * 60)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_docs = DjangoDocument.objects.filter(user=user).count()
    processed_docs = DjangoDocument.objects.filter(user=user, status='processed').count()
    
    print(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"    üìÑ –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {total_docs}")
    print(f"    ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {processed_docs}")
    print(f"    üìà –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: {(processed_docs/total_docs*100):.1f}%" if total_docs > 0 else "    üìà –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: 0%")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        test_auto_processing()
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    success = main()
    sys.exit(0 if success else 1)
